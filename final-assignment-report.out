\BOOKMARK [1][-]{section*.2}{Studentgegevens}{}% 1
\BOOKMARK [1][-]{section*.3}{Aanpak}{}% 2
\BOOKMARK [1][-]{section.1}{Probleemanalyse}{}% 3
\BOOKMARK [2][-]{subsection.1.1}{Presentatie}{section.1}% 4
\BOOKMARK [2][-]{subsection.1.2}{Slides}{section.1}% 5
\BOOKMARK [2][-]{subsection.1.3}{Stijlen}{section.1}% 6
\BOOKMARK [2][-]{subsection.1.4}{Gebruikersinteractie}{section.1}% 7
\BOOKMARK [1][-]{section.2}{Ontwerp}{}% 8
\BOOKMARK [2][-]{subsection.2.1}{Jabberpoint}{section.2}% 9
\BOOKMARK [2][-]{subsection.2.2}{Model}{section.2}% 10
\BOOKMARK [2][-]{subsection.2.3}{View}{section.2}% 11
\BOOKMARK [2][-]{subsection.2.4}{Controller}{section.2}% 12
\BOOKMARK [2][-]{subsection.2.5}{Utils}{section.2}% 13
\BOOKMARK [1][-]{section.3}{Keuzen}{}% 14
\BOOKMARK [2][-]{subsection.3.1}{Welke klasse is verantwoordelijk voor onderwerpen?}{section.3}% 15
\BOOKMARK [2][-]{subsection.3.2}{Moet een inhoudsopgave een andere stijl krijgen?}{section.3}% 16
\BOOKMARK [2][-]{subsection.3.3}{Moet de versiegeschiedenis in de bestanden zijn?}{section.3}% 17
\BOOKMARK [2][-]{subsection.3.4}{Moet de code worden voorzien van Javadoc?}{section.3}% 18
\BOOKMARK [2][-]{subsection.3.5}{Is het updaten van Java verstandig?}{section.3}% 19
\BOOKMARK [2][-]{subsection.3.6}{Moet lezen en schrijven in een apart package komen?}{section.3}% 20
\BOOKMARK [2][-]{subsection.3.7}{Moeten overal interfaces worden gedefinieerd?}{section.3}% 21
\BOOKMARK [2][-]{subsection.3.8}{Waarom aparte view-klassen voor slide items?}{section.3}% 22
\BOOKMARK [2][-]{subsection.3.9}{Waarom geen abstracte factory?}{section.3}% 23
\BOOKMARK [2][-]{subsection.3.10}{Is het gebruik van constanten een goed idee?}{section.3}% 24
\BOOKMARK [1][-]{section.4}{Sourcecode}{}% 25
